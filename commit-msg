#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

MSG=`awk '{printf("%s",$0)}' $1`

if [[ $MSG =~ ^(featq|fix|test|perf|revert|refactor|docs|style|chroe|ci)\(.*\):.*$ ]]
then
    echo "\033[32m commit success! \033[0m"
else
    echo "\033[31m Error: the commit message is irregular \033[m"
    echo "\033[31m Error: type must be one of [feat,fix,docs,style,refactor,test,chore] \033[m"
    echo "\033[31m eg: feat(user): add the user login \033[m"
    exit 1
fi


